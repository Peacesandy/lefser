}
result <- relativeAb(se)
View(se)
View(modified_se)
assay_data <- assay(se, i = assay)
se
res <- assay_data / div * 1e6
expect_equal(assay(zeller14ra)$rel_abs[1, 1], assay(zeller14ra)$counts[1, 1] * 1e6)
data(zeller14)
zeller14sub <- zeller14[, zeller14$study_condition != "adenoma"]
zeller14ra <- lefser::relativeAb(zeller14sub)
expect_equal(assay(zeller14ra)$rel_abs[1, 1], assay(zeller14ra)$counts[1, 1] * 1e6)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div
assaylist <- assayNames(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
)
assays(se) <- newalist
res <- assay_data / div
library(assay_data)
assaylist <- assayNames(se)
res <- assay_data / div
assaylist <- assayNames(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
)
library(Sunnarized Experiment)
library(SummarizedExperiment)
library(SummarizedExperiment)
library(SummarizedExperiment)
assays(se, withDimnames=FALSE) <- newalist
load newalist
library(SummarizedExperiment)
library(SummarizedExperiment)
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
search()
newalist <- append(
browser()
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
browser()
assays(se, withDimnames=FALSE) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div
assaylist <- assayNames(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
)
browser()
assays(se, withDimnames=FALSE) <- newalist
se
}
result <- relativeAb(se)
assays(se) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div * 1e6  # Adjusted line to multiply by 1e6
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
)
assays(se) <- newalist
se
}
result <- relativeAb(se)
se
result <- relativeAb(se)
relativeAb(se)
str(result)
summary(result)
assays(se) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div * 1e6  # Adjusted line to multiply by 1e6
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
)
assays(se) <- newalist
se
}
result <- relativeAb(se)
View(result)
View(result)
View(se)
res <- assay_data / div * 1e6  # Adjusted line to multiply by 1e6
str()
str(se)
str(relativeAb)
assaylist <- assays(se)
View(assaylist)
View(modified_se)
assays(se) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
)
assays(se) <- newalist
se
}
result <- relativeAb(se)
View(result)
View(se)
View(zeller14)
@export
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
)
assays(se) <- newalist
se
}
result <- relativeAb(se)
result <- relativeAb(se)
se
result <- relativeAb(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
)
assays(se) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div  * 1e6
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
)
assays(se) <- newalist
se
}
result <- relativeAb(se)
assays(se, withDimnames=FALSE) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div
assaylist <- assayNames(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
)
browser()
assays(se, withDimnames=FALSE) <- newalist
se
}
result <- relativeAb(se)
se
relativeAb <- function(se, assay = 1L) {
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
)
assays(se) <- newalist
se
}
result <- relativeAb(se)
assays(se) <- newalist
se
test_that("relativeAb function correctly normalizes column sums", {
data(zeller14)
zeller14sub <- zeller14[, zeller14$study_condition != "adenoma"]
zeller14ra <- relativeAb(zeller14sub)
expect_equal(sum(assay(zeller14ra, "rel_abs")), nrow(zeller14ra))
})
test_file("test_relativeAb.R")
test_file("test_relativeAb.R")
test_file("testthat.R")
test_file("test_that.R")
browser()
assays(se, withDimnames=FALSE) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div
assaylist <- assayNames(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
)
browser()
assays(se, withDimnames=FALSE) <- newalist
se
}
result <- relativeAb(se)
assays(se) <- newalist
c
library(lefser)
library(testthat)
test_check("lefser")
data(zeller14)
zeller14sub <- zeller14[, zeller14$study_condition != "adenoma"]
zeller14ra <- lefser::relativeAb(zeller14sub)
expect_equal(assay(zeller14ra)$rel_abs[1, 1], assay(zeller14ra)$counts[1, 1] * 1e6)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["counts"]][1, 1] * 1e6)
print(assay_names)
assay_names <- assayNames(zeller14ra)
assay_names <- assayNames(zeller14ra)
print(assay_names)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["exprs"]][1, 1] * 1e6)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["exprs"]][1, 1] * 1e6)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["exprs"]][1, 1] * 1e6)
has_rel_abs <- hasAssay(zeller14ra, "rel_abs")
has_rel_abs <- hasAssay(zeller14ra, "rel_abs")
print(has_rel_abs)
se
assays(se) <- newalist
test_check("lefser")
test_check("lefser")
test_check("lefser")
test_check("lefser")
library(lefser)
library(lefser)
library(testthat)
library(testthat)
test_check("lefser")
data(zeller14)
zeller14sub <- zeller14[, zeller14$study_condition != "adenoma"]
zeller14ra <- lefser::relativeAb(zeller14sub)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["counts"]][1, 1] * 1e6)
assay_names <- assayNames(zeller14ra)
print(assay_names)
assay_names <- assayNames(zeller14ra)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["exprs"]][1, 1] * 1e6)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["counts"]][1, 1] * 1e6)
assay_names <- assayNames(zeller14ra)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["counts"]][1, 1] * 1e6)
expect_equal(assay(zeller14ra)[["rel_abs"]][1, 1], assay(zeller14ra)[["counts"]][1, 1] * 1e6)
expect_equal(assay(zeller14ra)$rel_abs[1, 1], assay(zeller14ra)$counts[1, 1] * 1e6)
assays(se) <- newalist
assays(se) <- newalist
se
se
se
se
assays(se) <- newalist
res <- assay_data / div * 1e6
res <- assay_data / div * 1e6
res <- assay_data / div * 1e6
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
assaylist, values = S4Vectors::SimpleList(rel_abs = res * 1e6), after = 0L
assays(se) <- newalist
se
set.seed(1)
expect_no_warning(x ,- lefser(zeller14ra, groupCol = "study_curation"))
result <- relativeAb(se)
library(BioconductorPackageName)
result <- relativeAb(se)
result <- relativeAb(se)
result <- relativeAb(se)
result <- relativeAb(se)
result <- relativeAb(se)
library(lefser)
source("C:/Users/DELL/Desktop/bugSigSimple/lefser/R/utils.R")
source("C:/Users/DELL/Desktop/bugSigSimple/lefser/R/utils.R")
source("C:/Users/DELL/Desktop/bugSigSimple/lefser/R/utils.R")
source("C:/Users/DELL/Desktop/bugSigSimple/lefser/R/utils.R")
c
result <- relativeAb(se)
result <- relativeAb(se)
result <- relativeAb(se)
res <- assay_data / div * 1e6
result <- relativeAb(se)
name()
ls()
identical(assay_data)
identical(assaylist)
identical(assaylist, relativeAb())
R_GlobalEnv
ls()
env(assay_names)
relativeAb <- env(assay_names)
relativeAb <- env(assay_names)
env_parent()
env_relativeAb()
env_parent(relativeAb)
parent.env(relativeAb)
se
result <- relativeAb(se)
library(lefser)
rm(relativeAb)
library(lefser)
?relativeAb
#-peace
library(lefser)
?relativeAb
library(lefser)
test_file("testthat.R")
install.packages("testthat")
testthat::test_file("testthat.R")
dirname()
testthat::test_file("C:\Users\DELL\Desktop\bugSigSimple\lefser\tests\testthat.R")
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
res <- assay_data / div * 1e6  # Multiply by 1e6 here
assaylist <- assays(se)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
assays(se, withDimnames = FALSE) <- newalist
se
View(modified_se)
se
assays(se, withDimnames = FALSE) <- newalist
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
newalist <- append(
res <- assay_data / div * 1e6  # Multiply by 1e6 here
res <- assay_data / div * 1e6  # Multiply by 1e6 here
res <- assay_data / div * 1e6
assaylist <- assays(se)
res <- assay_data / div
library(lefser)
se
library(SummarizedExperiment)
library(SummarizedExperiment)
assaylist <- assays(se)
assaylist <- assays(se)
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
res <- assay_data / div * 1e6
res <- assaylist[[1]] / div * 1e6
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
)
assays(se) <- newalist
se
#'     assays = list(
#'         counts = matrix(
#'             rep(1, 4), ncol = 1, dimnames = list(LETTERS[1:4], "SAMP")
#'         )
#'     )
#' )
#' assay(se)
#' assay(relativeAb(se))
#'
#' @export
relativeAb <- function(se, assay = 1L) {
assay_data <- assay(se, i = assay)
csums <- colSums(assay_data)
div <- matrix(rep(csums, each = nrow(assay_data)), ncol = ncol(assay_data))
res <- assay_data / div * 1e6
assaylist <- assays(se)
newalist <- append(
assaylist, values = S4Vectors::SimpleList(rel_abs = res), after = 0L
)
assays(se) <- newalist
se
}
library(lefser)
res <- assay_data / div * 1e6
print()
print(res)
print(rel_abs)
print(rel_abs)
print(assay_data)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
devtools::test("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
rlang::last_trace()
library(lefser)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
assays(zeller14ra)
class(zeller14ra)
expect_equal(assays(zeller14ra)$rel_abs, assaylist[[1]] / div * 1e6)
library(lefser)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
class(zeller14ra)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
set.seed(1)
set.seed(1)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
testthat::test_file("C:/Users/DELL/Desktop/bugSigSimple/lefser/tests/testthat.R")
library(lefser)
